<!DOCTYPE html>
<html lang="pt-BR">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Laudo</title>

    <!-- Imports -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"
        integrity="sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL"
        crossorigin="anonymous"></script>
    <script src="https://code.jquery.com/jquery-3.7.1.min.js"
        integrity="sha256-/JqT3SQfawRcv/BIHPThkBvs0OEvtFFmqPF/lYI/Cxo=" crossorigin="anonymous"></script>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.1/font/bootstrap-icons.css">

    <!-- <script src="https://cdn.jsdelivr.net/gh/xcash/bootstrap-autocomplete@v2.3.7/dist/latest/bootstrap-autocomplete.min.js"></script> -->
    <!--  -->
    <style>
        * {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            font-size: 13px;
            --border-color: #1bc8f0;
            --ref-backgound: #8bcde3
        }

        .form-top {
            border-top: 1px solid rgba(0, 0, 0, 0.2);
        }

        .form-top-strong {
            border-top: 3px solid rgba(0, 0, 0, 0.2);
        }

        .form-left {
            border-left: 1px solid black;
        }

        .shadown {
            box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 10px 0 rgba(0, 0, 0, 0.2);
        }

        .box {
            width: 700px;

            /* height: 550px; */
        }

        .lbl {
            font-weight: bold;
            margin-bottom: 0;
            text-transform: uppercase;
            font-size: 11px;
        }

        .form-check-input {
            background-color: white;
            border-color: black;
        }

        .form-check-input:checked {
            border-color: var(--border-color);
            background-color: var(--border-color);
        }

        .tbl {
            border: 1px solid black;
        }

        .tbl thead tr th {
            border-left: 1px solid black;
            font-size: 11px;
        }

        .tbl thead tr {
            border-bottom: 1px solid black;
        }

        .tbl thead tr th {
            background-color: transparent;
        }

        .tbl tbody tr td {
            background-color: transparent;
        }

        .tbl tbody tr td {
            border-left: 1px solid black;
        }

        .tbl tbody tr {
            border-bottom: 1px solid black;
        }

        .inp {
            border-color: black;
            height: 25px;
        }

        .inp-head {
            border-color: rgba(0, 0, 0, 0.3);
        }

        input {
            font-size: 11px !important;
        }

        .ref .col .lbl {
            font-size: 11px;
        }

        .row_seach:hover {
            background-color: #83A6BF;
            color: white;
        }

        .row_seach_impar {
            background-color: #e1e1e1;
        }

        /* .reftb {} */
    </style>
    <style media="print">
        * {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            margin: 0;
            padding: 0;
        }

        button {
            display: none !important;
        }

        .container {
            margin: 0 !important;
            padding: 0 !important;
            min-width: 22cm !important;
            min-height: 29.7cm !important;
        }

        #queixa {
            min-height: 5cm;
        }

        .assinatura {
            bottom: 25px !important;
            margin-top: auto;
        }

        @page {
            size: portrait;
            margin: 0;
        }
    </style>
    <script>
        class user {
            constructor(id, nome, cpf, idade, endereco, endereco_numero, telefone, sexo) {
                this.id = id;
                this.nome = nome;
                this.cpf = cpf;
                this.idade = idade;
                this.endereco = endereco;
                this.endereco_numero = endereco_numero;
                this.telefone = telefone;
                this.sexo = sexo;
            }
        }
        class Resultado {
            constructor(colesterol, hdl, triglicerides, ldl) {
                this.colesterol = colesterol;
                this.hdl = hdl;
                this.triglicerides = triglicerides;
                this.ldl = ldl;
            }
        }

        class Laudo {
            constructor(queixa, data, resultado) {
                this.queixa = queixa;
                this.data = data;
                this.resultado = new Resultado();
                this.resultado = resultado;
            }
        }



        let users = [user];
        let usersSearch = [user];
        let usuarioAtual = new user();
        let resultadoAtual = new Laudo();

        function setUser(user) {
            if (!user) {
                alert('Paciente não é válido!')
            }

            $('#name').val(user.nome ? user.nome : '');
            $('#cpf').val(user.cpf ? cpfFomatter(user.cpf) : '');
            $('#end').val(user.endereco ? user.endereco : '');
            let m = $('#male');
            let f = $('#female');
            if (!user.sexo) {
                user.sexo = 'FEMALE'
            }

            if (user.sexo === 'FEMALE') {
                m.prop('checked', false)
                f.prop('checked', true)
            } else {
                f.prop('checked', false)
                m.prop('checked', true)
            }

            $('#number').val(user.telefone ? celularFormatter(user.telefone) : '')
            $('#n').val(user.endereco_numero ? user.endereco_numero : '')
            usuarioAtual = user;
        }

        function setLaudo(laudo) {
            if (!laudo) {
                alert('laudo não é válido!')
            }
            resultadoAtual = laudo;

            const resultado = laudo.resultado ? laudo.resultado : new Resultado()
            $('#queixa').val(laudo['queixa'] ? laudo['queixa'] : '');
            $('#date').val(laudo['data'] ? laudo['data'].split("T")[0] : new Date().toISOString().split("T")[0]);
            $('#colesterol').val(resultado.colesterol ? resultado['colesterol'] : '');
            $('#hdl').val(resultado.hdl ? resultado['hdl'] : '');
            $('#triglicerides').val(resultado.triglicerides ? resultado['triglicerides'] : '');
            $('#ldl').val(resultado.ldl ? resultado['ldl'] : '');
        }


        function init() {

            if (!resultadoAtual.resultado) {
                resultadoAtual.resultado = new Resultado();
            }

            initUser();
            initLaudo();

            $('#gen').on('click', (event) => {
                getAllAndSet(async () => {
                    usuarioAtual.cpf = usuarioAtual.cpf.replace(/[^0-9]/g, '')
                    let res = await fetch('/data/save_user', {
                        method: 'POST',
                        body: JSON.stringify(usuarioAtual),
                        headers: {
                            "Content-Type": "application/json;charset=utf-8"
                        }
                    }).catch(err => alert(err.message))

                    resultadoAtual['json'] = JSON.stringify(resultadoAtual.resultado);
                    const u = await res.json();
                    resultadoAtual['idUsuario'] = u['id'];
                    resultadoAtual['id'] = undefined;

                    fetch('/data/save_laudo', {
                        method: 'POST',
                        body: JSON.stringify(resultadoAtual),
                        headers: {
                            "Content-Type": "application/json;charset=utf-8"
                        }
                    }).then(res => {
                        window.print();
                        setUser(new user());
                        setLaudo(new Laudo());
                    }).catch(err => alert(err.message))
                })
            });

            $('#date').val(new Date().toISOString().split("T")[0])

            if (!resultadoAtual.data) {
                resultadoAtual.data = new Date($('#date').val());
            }

            $('#busca-nome').on('keyup', (event) => {
                searchLaudos()
            })
            $('#busca-cpf').on('keyup', (event) => {
                $('#busca-cpf').val(cpfFomatter(event.target.value))
                searchLaudos()
            })
        }


        //'name', 'male', 'end', 'n', 'number'
        function getAllAndSet(callback) {
            const userFields = new Map([
                ["nome", 'name'],
                ["cpf", 'cpf'],
                ["endereco", 'end'],
                ["endereco_numero", 'n'],
                ["telefone", 'number'],
                ["sexo", 'male']
            ]);


            for (let key of userFields.keys()) {
                let v = userFields.get(key);
                if (key === 'sexo') {
                    const aux = $(`#${v}`).is(':checked');
                    if (aux) {
                        usuarioAtual.sexo = 'MALE'
                    } else {
                        usuarioAtual.sexo = 'FEMALE'

                    }
                } else if (key === 'cpf' || key == 'telefone') {
                    const v2 = $(`#${v}`);
                    usuarioAtual[key] = v2 ? v2.val().replace(/[^0-9]/g) : '';

                } else {
                    const v2 = $(`#${v}`);
                    usuarioAtual[key] = v2 ? v2.val() : '';

                }
            }

            const resultadoFieds = new Map([
                ["colesterol", 'colesterol'],
                ["hdl", 'hdl'],
                ["triglicerides", 'triglicerides'],
                ["ldl", 'ldl'],
            ])
            if (!resultadoAtual) {
                resultadoAtual = new Laudo();
            }

            if (!resultadoAtual.resultado) {
                resultadoAtual.resultado = new Resultado();
            }

            for (let key of resultadoFieds.keys()) {
                let v = resultadoFieds.get(key);

                const v2 = $(`#${v}`);
                resultadoAtual.resultado[key] = v2 ? v2.val() : '';

            }

            const dt = $(`#date`).val();
            resultadoAtual.data = dt ? new Date(dt).toISOString() : new Date().toISOString();


            if (!resultadoAtual.queixa) {
                const qx = $(`#queixa`).val();
                resultadoAtual.queixa = qx ? qx : '';
            }
            callback();
        }

        function initLaudo() {
            $('#data').on('change', (event) => {
                let value = $('#' + event.target.id).val();
                resultadoAtual.data = new Date(value);
            })
            $('#queixa').on('keyup change', (event) => {
                changeLaudo(event, undefined, 'queixa')
            })
            $('#colesterol').on('keyup change', (event) => {
                changeResultado(event, undefined, 'colesterol')
            })
            $('#hdl').on('keyup change', (event) => {
                changeResultado(event, undefined, 'hdl')
            })
            $('#triglicerides').on('keyup change', (event) => {
                changeResultado(event, undefined, 'triglicerides')
            })
            $('#ldl').on('keyup change', (event) => {
                changeResultado(event, undefined, 'ldl')
            })

        }


        function initUser() {
            $('#name').on('keyup change', (event) => {
                changeUser(event, undefined, 'nome')
            });

            $('#male').on('change', (event) => {
                if ($('#male').is(':checked'))
                    usuarioAtual.sexo = 'MALE'
            })

            $('#female').on('change', (event) => {
                if ($('#female').is(':checked'))
                    usuarioAtual.sexo = 'FEMALE'
            })

            $('#end').on('keyup change', (event) => {
                changeUser(event, undefined, 'endereco')
            })

            $('#n').on('keyup change', (event) => {
                changeUser(event, undefined, 'endereco_numero')
            })

            $('#number').on('keyup change', (event) => {
                changeUser(event, celularFormatter, 'telefone')
            })

            $('#cpf').on('keyup change', (event) => {
                changeUser(event, cpfFomatter, 'cpf')
            })
        }

        const celularFormatter = (value) => {
            let aux = value.replace(/[^0-9]/g, '').split('');
            let ret = '';
            for (let i = 0; i < aux.length; i++) {
                if (i == 0) {
                    ret = ret.concat('(');
                }
                if (i == 2) {
                    ret = ret.concat(') ');
                }
                if (i == 3) {
                    ret = ret.concat(' ');
                }
                if (i == 7) {
                    ret = ret.concat('-');
                }
                ret = ret.concat(aux[i]);
            }
            $('#number').val(ret ? ret : value)
            return ret ? ret : value;
        }

        const cpfFomatter = (value) => {
            let vl = value ? new String(value).valueOf().replace(/[^0-9]/g, '') : '';
            const split = vl.split('');
            let retorno = '';
            if (split.length <= 11 && split.length > 0) {
                for (let i = 0; i < split.length; i++) {
                    if (i == 3) {
                        retorno += '.';
                    }
                    if (i == 6) {
                        retorno += '.';
                    }
                    if (i == 9) {
                        retorno += '-';
                    }
                    retorno += split[i];
                }
            } else {
                for (let i = 0; i < split.length; i++) {
                    if (i == 2) {
                        retorno += '.';
                    }
                    if (i == 5) {
                        retorno += '.';
                    }
                    if (i == 8) {
                        retorno += '/';
                    }
                    if (i == 12) {
                        retorno += '-';
                    }
                    retorno += split[i];
                }
            }

            $('#cpf').val(retorno ? retorno : value)
            return retorno ? retorno : value;
        }

        function changeUser(event, mask, field) {
            let value = $('#' + event.target.id).val();
            if (mask) {
                mask(value);
            }
            usuarioAtual[field] = value;
        }

        function changeLaudo(event, mask, field) {
            let value = $('#' + event.target.id).val();
            if (mask) {
                mask(value);
            }
            resultadoAtual[field] = value;
        }

        function changeResultado(event, mask, field) {
            let value = $('#' + event.target.id).val();
            if (mask) {
                mask(value);
            }
            resultadoAtual.resultado[field] = value;
        }

        function searchLaudos() {
            const container = $('#search-laudos');
            const nome = $('#busca-nome');
            const cpf = $('#busca-cpf');

            fetch(`/data/find_laudo_by_user?cpf=${cpf.val() ? cpf.val().replace(/[^0-9]/g) : ''}&nome=${nome.val() ? nome.val() : ''}`, {
                method: 'GET'
            }).then(async res => {
                if (res.status == 200) {
                    const u = await res.json();
                    container.html('');
                    if (u && u.length > 0) {
                        usersSearch = u;

                        u.forEach(element => {
                            element['laudos'].forEach((l, i) => {
                                container.append(`
                                <div class="row m-0 g-0 p-2 row_seach ${i % 2 == 0 ? '' : 'row_seach_impar'}" ondblclick="changeAll(event)" id="${element['id']}-${l['id']}" >
                                    <div class="col">${element['nome']}</div>
                                    <div class="col">${cpfFomatter(element['cpf'])}</div>
                                    <div class="col">${celularFormatter(element['telefone'])}</div>
                                    <div class="col">${new Date(l['data']).toISOString().substr(0, 10).split('-').reverse().join('/')}</div>
                                </div>                            
                                `)
                            })
                        });
                    } else {
                        container.append(`
                        <div class="row m-0 g-0 p-2">
                            <div class="col"></div>
                            <div class="col text-center" style="background-color: var(--border-color); color: black; border-radius: 5%;">
                                Nada encontrado!
                            </div>
                            <div class="col"></div>
                        </div>                            
                        `)
                    }
                }
            }).catch(err => {
                alert(err.message)
            })
        }

        function changeAll(event) {
            var id;
            if (!event.target.id) {
                id = event.target.parentElement.id.split(/-/g);
            } else {
                id = event.target.id.split(/-/g);
            }

            const us = usersSearch.find(u => `${u.id}` == id[0]);
            const res = us['laudos'].find(l => `${l.id}` == id[1]);
            res['resultado'] = JSON.parse(res['json']);


            setUser(us)
            setLaudo(res);
            //Laudo


            if (busca) {
                busca.hide();
                buscaIsShowing = false;
            }
        }

        var busca;
        var buscaIsShowing = false;
        $('document').ready(function () {
            $('textarea').each(function () {
                $(this).val($(this).val().trim());
            });
            init();
            busca = new bootstrap.Modal('#modalBuscar');
            $('#modalBuscar').on('shown.bs.modal', function () {
                buscaIsShowing = true;
                $("#busca-nome").focus();
            });
            document.body.addEventListener('keydown', (event) => {
                if (event.key === 'F2') {
                    if (busca) {
                        if (buscaIsShowing) {
                            busca.hide();
                            buscaIsShowing = false;
                        } else {
                            busca.show();
                        }
                    }
                }
            })

        });

    </script>
    <script type="module">
        import Autocomplete from "https://cdn.jsdelivr.net/gh/lekoala/bootstrap5-autocomplete@master/autocomplete.js";
        const inpCpf = document.getElementById('cpf');

        new Autocomplete(inpCpf, {
            source: (qry, callback) => {
                fetch(`/data/find_user?cpf=${qry.replace(/[^0-9]/g, '')}`, {
                    method: 'GET',
                }).then(async res => {
                    if (res.status == 200) {
                        const json = await res.json();
                        users = json;
                        callback(json.map(j => j['cpf']))
                    }
                })
            },
            onSelectItem: (value) => {
                setUser(users.find(v => v.cpf === value.label))
            }
        });

        const inpNome = document.getElementById('name');

        new Autocomplete(inpNome, {
            source: (qry, callback) => {
                fetch(`/data/find_user?nome=${qry}`, {
                    method: 'GET',
                }).then(async res => {
                    if (res.status == 200) {
                        const json = await res.json();
                        users = json;
                        callback(json.map(j => j['nome']))
                    }
                })
            },
            onSelectItem: (value) => {
                setUser(users.find(v => v.nome === value.label))
            }
        })
    </script>
</head>

<body>
    <div class="container p-1 shadown box mt-2"
        style="border-bottom: 3px solid var(--border-color); background-color: #f1f1f1;">
        <div class="row m-0 ps-1 pt-1"
            style="border-top: 5px solid var(--border-color); color: #d8120f; font-weight: bolder;">
            <div class="col">
                <img src="/logo.jpeg" alt="" height="100">
            </div>
            <div class="col"></div>
        </div>
        <div class="row g-0 m-0 p-2 pb-0">
            <div class="col-8 p-2 me-1 form-top">
                <label class="form-label lbl" for="name">Paciente</label>
                <input class="form-control inp-head" type="text" id="name">
            </div>
            <div class="vr"></div>
            <div class="col p-2 form-top ms-1">
                <label class="form-label lbl" for="sex">Sexo</label>
                <div class="form-group  d-flex flex-row justify-content-center" id="sex">
                    <div class="form-check me-2" title="Feminino">
                        <input class="form-check-input inp-head" checked type="radio" name="flexRadioDefault"
                            id="female">
                        <label class="form-check-label" for="female">
                            <i class="bi bi-gender-female"></i>
                        </label>

                    </div>
                    <div class="form-check" title="Masculino">
                        <input class="form-check-input inp-head" type="radio" name="flexRadioDefault" id="male">
                        <label class="form-check-label" for="male">
                            <i class="bi bi-gender-male"></i>
                        </label>
                    </div>
                </div>
            </div>
        </div>
        <div class="row g-0 m-0 p-2 pb-0">
            <div class="col-8 p-2 me-1 form-top">
                <label class="form-label lbl" for="end">Endereço</label>
                <input class="form-control inp-head" type="text" id="end">
            </div>
            <div class="vr"></div>
            <div class="col p-2 ms-1 form-top">
                <label class="form-label lbl" for="n">Numero</label>
                <input class="form-control inp-head" type="text" id="n">
            </div>
        </div>

        <div class="row g-0 m-0 p-2 pb-0">
            <div class="col-8 p-2 me-1 form-top" id="displayValue">
                <label class="form-label lbl" for="cpf">CPF</label>
                <input class="form-control inp-head" type="text" id="cpf">
            </div>
            <div class="vr"></div>
            <div class="col p-2 ms-1 form-top">
                <label class="form-label lbl" for="number">Telefone</label>
                <input class="form-control inp-head" type="tel" id="number">
            </div>
        </div>

        <div class="row g-0 m-0 mt-2 form-top-strong">
            <div class="flex-row d-flex">
                <span class="m-1" style="height: 15px; width: 15px; background-color: var(--border-color);"></span>
                <label for="area-wrapper" class="form-label lbl"> Queixa principal e Histórico do paciente</label>
            </div>
            <div class="form-floating" id="area-wrapper">
                <textarea class="form-control p-1 inp-head" name="" id="queixa">
                </textarea>
            </div>
        </div>

        <div class="row g-0 m-0 mt-2 form-top-strong">
            <div class="flex-row d-flex">
                <span class="m-1" style="height: 15px; width: 15px; background-color: var(--border-color);"></span>
                <label for="results" class="form-label lbl">Resultados</label>
            </div>
            <div class="row mt-1 p-5 pt-3 pb-1" id="results">
                <table class="table tbl">
                    <thead>
                        <tr>
                            <th class="text-center">DATA</th>
                            <th class="text-center">COLESTEROL TOTAL</th>
                            <th class="text-center">HDL</th>
                            <th class="text-center">TRIGLICÉRIDES</th>
                            <th class="text-center">LDL</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td><input class="form-control inp" type="date" id="date"></td>
                            <td><input class="form-control inp" type="number" id="colesterol"></td>
                            <td><input class="form-control inp" type="number" id="hdl"></td>
                            <td><input class="form-control inp" type="number" id="triglicerides"></td>
                            <td><input class="form-control inp" type="number" id="ldl"></td>
                        </tr>
                    </tbody>
                </table>
            </div>

            <div class="row mt-2 p-5 pb-0 pt-1 mb-1 form-top g-0 ms-2 me-2 text-center" style="font-size: 10px;">
                <p>Valores referenciais desejáveis e de alvo terapêutico do perfil lipídico pada adultos > 20 </p>
                <div style="border: 1px solid rgba(0, 0, 0, 0.3);">
                    <div class="row g-0 ref" id="header"
                        style="border-bottom: 1px solid rgba(0, 0, 0, 0.3); background-color: var(--ref-backgound);">
                        <div class="col">
                            <label class="lbl">Lípides</label>
                        </div>
                        <div class="col">
                            <label class="lbl">Com jejum (mg/dl)</label>
                        </div>
                        <div class="col">
                            <label class="lbl">Sem jejum (mg/dl)</label>
                        </div>
                        <div class="col">
                            <label class="lbl">Categoria referencial</label>
                        </div>
                    </div>
                    <div class="row g-0 reftb" style="border-bottom: 1px solid rgba(0, 0, 0, 0.3);">
                        <div class="col">
                            <label class="">Colesterol Total*</label>
                        </div>
                        <div class="vr p-0" style="width: 1px !important;"></div>
                        <div class="col">
                            <label class=""> &#60;190 </label>
                        </div>
                        <div class="vr p-0" style="width: 1px !important;"></div>
                        <div class="col">
                            <label class=""> &#60;190 </label>
                        </div>
                        <div class="vr p-0" style="width: 1px !important;"></div>
                        <div class="col">
                            <label class="">Desejavel</label>
                        </div>
                    </div>
                    <div class="row g-0 reftb" style="border-bottom: 1px solid rgba(0, 0, 0, 0.3);">
                        <div class="col">
                            <label class="">HDL-C</label>
                        </div>
                        <div class="vr p-0" style="width: 1px !important;"></div>
                        <div class="col">
                            <label class=""> >40 </label>
                        </div>
                        <div class="vr p-0" style="width: 1px !important;"></div>
                        <div class="col">
                            <label class=""> >40 </label>
                        </div>
                        <div class="vr p-0" style="width: 1px !important;"></div>
                        <div class="col">
                            <label class="">Desejavel</label>
                        </div>
                    </div>
                    <div class="row g-0 reftb" style="border-bottom: 1px solid rgba(0, 0, 0, 0.3);">
                        <div class="col">
                            <label class="">Triglicérides**</label>
                        </div>
                        <div class="vr p-0" style="width: 1px !important;"></div>
                        <div class="col">
                            <label class=""> &#60;150 </label<>
                        </div>
                        <div class="vr p-0" style="width: 1px !important;"></div>
                        <div class="col">
                            <label class=""> &#60;175 </label>
                        </div>
                        <div class="vr p-0" style="width: 1px !important;"></div>
                        <div class="col">
                            <label class="">Desejavel</label>
                        </div>
                    </div>
                    <div class="row g-0 reftb"
                        style="border-bottom: 1px solid rgba(0, 0, 0, 0.3); background-color: var(--ref-backgound);">
                        <div class="col"></div>
                        <div class="col-3">
                            <label for="">Categoria de risco</label>
                        </div>
                    </div>
                    <!--  -->

                    <div class="row g-0 reftb">
                        <div class="col">
                            <label class="">LDL-C</label>
                        </div>
                        <div class="vr p-0" style="width: 1px !important;"></div>
                        <div class="col">
                            <label class=""> &#60;130 </label<>
                        </div>
                        <div class="vr p-0" style="width: 1px !important;"></div>
                        <div class="col">
                            <label class=""> &#60;130 </label>
                        </div>
                        <div class="vr p-0" style="width: 1px !important;"></div>
                        <div class="col">
                            <label class="">Baixo</label>
                        </div>
                    </div>
                    <div class="row g-0 reftb">
                        <div class="col">
                            <label class=""></label>
                        </div>
                        <div class="vr p-0" style="width: 1px !important;"></div>
                        <div class="col">
                            <label class=""> &#60;100 </label<>
                        </div>
                        <div class="vr p-0" style="width: 1px !important;"></div>
                        <div class="col">
                            <label class=""> &#60;100 </label>
                        </div>
                        <div class="vr p-0" style="width: 1px !important;"></div>
                        <div class="col">
                            <label class="">Intermediário</label>
                        </div>
                    </div>
                    <div class="row g-0 reftb">
                        <div class="col">
                            <label class=""></label>
                        </div>
                        <div class="vr p-0" style="width: 1px !important;"></div>
                        <div class="col">
                            <label class=""> &#60;70 </label<>
                        </div>
                        <div class="vr p-0" style="width: 1px !important;"></div>
                        <div class="col">
                            <label class=""> &#60;70 </label>
                        </div>
                        <div class="vr p-0" style="width: 1px !important;"></div>
                        <div class="col">
                            <label class="">Alto</label>
                        </div>
                    </div>
                    <div class="row g-0 reftb">
                        <div class="col">
                            <label class=""></label>
                        </div>
                        <div class="vr p-0" style="width: 1px !important;"></div>
                        <div class="col">
                            <label class=""> &#60;70 </label<>
                        </div>
                        <div class="vr p-0" style="width: 1px !important;"></div>
                        <div class="col">
                            <label class=""> &#60;70 </label>
                        </div>
                        <div class="vr p-0" style="width: 1px !important;"></div>
                        <div class="col">
                            <label class="">Muito alto</label>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row g-0 p-0 assinatura" style="margin-top: 100px;">
                <div class="col"></div>
                <div class="col text-center" style="border-top: 1px solid rgba(0, 0, 0, 0.3);">
                    <p class="m-0"><span style="font-weight: bolder; font-size: 10px !important;">Natilucia Brito
                            Noleto</br></p>
                    <p class="m-0" style="font-size: 10px !important;"><span
                            style="font-weight: bolder; font-size: 10px !important;">Farmacêutica</span> CRF/TO: 1198
                    </p>
                </div>
                <div class="col"></div>
            </div>
        </div>
        <div class="row g-0 m-0 mt-2 me-4">
            <div class="col-8"></div>
            <div class="col d-flex flex-row justify-content-end">
                <button type="button" class="btn btn-primary" id="gen">Gerar impressao</button>
            </div>
        </div>
    </div>

    <div class="modal modal-lg" id="modalBuscar">
        <div class="modal-dialog">
            <div class="modal-content" style="border-top: 5px solid var(--border-color);">
                <div class="modal-body">
                    <div class="row m-0 g-0">
                        <div class="col p-2">
                            <label class="form-label" for="busca-nome">
                                Nome do paciente
                            </label>
                            <input class="form-control" id="busca-nome" type="text">
                        </div>
                        <div class="col-3 p-2">
                            <label class="form-label" for="busca-cpf">
                                CPF do paciente
                            </label>
                            <input class="form-control" id="busca-cpf" type="text">
                        </div>
                        <div class="col-4"></div>
                    </div>
                    <div style="border: 0.5mm solid rgba(0, 0, 0, 0.3);">
                        <div class="row m-0 g-0 p-2"
                            style="background-color: #c1c1c1; border-bottom: 0.5mm solid rgba(0, 0, 0, 0.3); font-weight: bold !important;">
                            <div class="col">Nome</div>
                            <div class="col">CPF</div>
                            <div class="col">Telefone</div>
                            <div class="col">Data</div>
                        </div>
                        <div id="search-laudos">
                            <div class="row m-0 g-0 p-2">
                                <div class="col"></div>
                                <div class="col text-center"
                                    style="background-color: var(--border-color); color: black; border-radius: 5%;">
                                    Nada encontrado!
                                </div>
                                <div class="col"></div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

</body>

</html>